on:
  workflow_call:
    inputs:
      image_name: 
        type: string
        required: true
      release_tag:
        type: string
        default: latest
      enable_push:
        type: boolean
        default: false
      build_context:
        type: string
        default: .
      dockerfile:
        type: string
        default: Dockerfile

permissions:
  contents: write

jobs:
  build:
    name: Build, scan and push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        if: ${{ inputs.enable_push }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Construct docker tag
        id: docker_tag
        run: echo "DOCKER_TAG=${{ inputs.image_name }}:${{ inputs.release_tag }}" >> "$GITHUB_OUTPUT"

      - name: Build image
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.build_context }}
          file: ${{ inputs.dockerfile }}
          push: ${{ inputs.enable_push }}
          tags: ${{ steps.docker_tag.outputs.DOCKER_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
            image-ref: ${{ steps.docker_tag.outputs.DOCKER_TAG }}
            format: 'table'
            exit-code: '1'
            ignore-unfixed: true
            vuln-type: 'os,library'
            severity: 'HIGH,CRITICAL'

      - name: Push image
        if: ${{ inputs.enable_push }}
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.build_context }}
          file: ${{ inputs.dockerfile }}
          push: true
          tags: ${{ steps.docker_tag.outputs.DOCKER_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
