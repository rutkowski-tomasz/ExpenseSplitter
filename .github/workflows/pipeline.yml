name: CI/CD pipeline

on:
  push

permissions: write-all

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Test with the dotnet CLI
        run: dotnet test --collect:"XPlat Code Coverage" *.sln

      - name: Restore coverage history
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          github-token: ${{secrets.PERSONAL_ACCESS_TOKEN}}
          pattern: CoverageHistory
          path: CoverageHistory

      - name: Display structure of downloaded files
        run: ls -R CoverageHistory
        continue-on-error: true

      - name: ReportGenerator
        uses: danielpalme/ReportGenerator-GitHub-Action@5
        with:
          reports: 'test/*Test*/TestResults/*/coverage.cobertura.xml'
          targetdir: 'CoverageReports'
          historydir: 'CoverageHistory'
          reporttypes: 'HtmlInline;Cobertura'
          filefilters: '-*/Migrations/*'

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: CoverageReports
          path: CoverageReports

      - name: Upload coverage history
        uses: actions/upload-artifact@v4
        with:
          name: CoverageHistory
          path: CoverageHistory

  tag_release:
    name: Tag release
    uses: ./.github/workflows/workflow-tag-release.yml

  build_scan:
    name: Docker image
    needs: [test, tag_release]
    uses: ./.github/workflows/workflow-docker-build-scan-push.yml
    with:
      image_name: rutkowski/expensesplitter-api
      enable_push: true
      build_context: src
      dockerfile: src/ExpenseSplitter.Api.Presentation/Dockerfile
      release_tag: ${{ needs.tag_release.outputs.release_tag }}
    secrets: inherit
